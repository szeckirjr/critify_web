### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Album {
  artistName: String
  awardsAndRankings: [String]
  criticReviewCount: Int
  criticReviews: [CriticReview]
  genres: [String]
  image: String
  recordLabel: String
  releaseDate: String
  score: Int
  summary: String
  title: String
  userRatingCount: Int
  userReviews: [UserReview]
  userScore: Float
}

type AlbumResponse {
  data: Album
  message: String
  status: status
}

type Artist {
  albumNames: [String]
  avgCareerScore: Int
  name: String
}

type ArtistResponse {
  data: Artist
  message: String
  status: status
}

type AuthResponse {
  message: String
  status: status
}

type AwaitingReview {
  awaitingCount: Int
  description: String
  reviewCount: Int
}

type CriticReview {
  critic: String
  date: String
  score: Int
  summary: String
  url: String
}

type Mutation {
  createAccount(email: String!, name: String!, password: String!): AuthResponse
}

type Query {
  """Get a Metacritic album by name"""
  getMetaAlbum(artistName: String!, title: String!): AlbumResponse

  """Get a Metacritic artist by name"""
  getMetaArtist(name: String!): ArtistResponse
  signIn(email: String!, password: String!): AuthResponse
  signOut: AuthResponse
}

type UserReview {
  content: String
  date: String
  score: Float
  thumbsTotal: Int
  thumbsUp: Int
  username: String
}

enum status {
  error
  success
}